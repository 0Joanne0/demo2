---
title: "Statistics"
---

## Base EMPLOIS
<div class="graph-section">
  <h2>Numérique </h2>
  <p>This graph shows the relationship between X and Y variables.</p>
```{r,echo=FALSE, warning=FALSE, message=FALSE}
# Load the required libraries
library(readr)
library(dplyr)
library(knitr)
library(kableExtra)

# Load the data from the CSV file
base_emp <- read_delim(
  "data/base_emp.csv",
  delim = ";",
  col_names = TRUE,
  col_types = cols(.default = "c"), # Treat all columns as character
  trim_ws = TRUE
)

# Ensure relevant columns are numeric for calculations
base_emp <- base_emp %>%
  mutate(
    n_offres = as.numeric(n_offres),
    avg_wage = as.numeric(avg_wage)
  )

# Calculate summary statistics for 'n_offres'
summary_stats_offres <- base_emp %>%
  ungroup() %>%
  summarise(
    minimum = min(n_offres, na.rm = TRUE),
    médiane = median(n_offres, na.rm = TRUE),
    maximum = max(n_offres, na.rm = TRUE),
    moyenne = mean(n_offres, na.rm = TRUE),
    `écart-type` = sd(n_offres, na.rm = TRUE),
    `nombre de manquants` = sum(is.na(n_offres))
  ) %>%
  mutate(Variable = "n_offres") %>%
  relocate(Variable)

# Calculate summary statistics for 'avg_wage'
summary_stats_wage <- base_emp %>%
  ungroup() %>%
  summarise(
    minimum = min(avg_wage, na.rm = TRUE),
    médiane = median(avg_wage, na.rm = TRUE),
    maximum = max(avg_wage, na.rm = TRUE),
    moyenne = mean(avg_wage, na.rm = TRUE),
    `écart-type` = sd(avg_wage, na.rm = TRUE),
    `nombre de manquants` = sum(is.na(avg_wage))
  ) %>%
  mutate(Variable = "avg_wage") %>%
  relocate(Variable)

# Combine summary statistics
summary_stats_emp <- bind_rows(summary_stats_offres, summary_stats_wage)

# Rename columns for clarity
colnames(summary_stats_emp) <- c(
  "Variables", "Minimum", "Médiane", "Maximum", 
  "Moyenne", "Écart-type", "Nombre de manquants"
)

# Create a formatted HTML table
kable(summary_stats_emp,
      format = "html",
      col.names = colnames(summary_stats_emp)) %>%
  kable_styling(
    full_width = TRUE,
    position = "center",
    bootstrap_options = c("striped", "hover", "condensed", "responsive", "bordered")
  ) %>%
  column_spec(1, background = "#d4e1e1", color = "#406f71", bold = TRUE) %>%
  row_spec(0, background = "#406f71", color = "white", bold = TRUE)

```
</div> 



<div class="graph-section">
  <h2>Caractères </h2>
  <p>This graph shows the relationship between X and Y variables.</p>
```{r}
library(tidyr)
library(stringr)
# Ensure relevant columns are numeric for calculations
base_emp <- base_emp %>%
  mutate(
    avg_wage = as.numeric(avg_wage),
    n_offres = as.numeric(n_offres)
  )

# Function to expand and clean sector data
expand_sectors <- function(data, sector_column) {
  data |>
    mutate(sector_main = str_split(sector_main, ",")) |> 
    unnest(sector_main) |> 
    mutate(sector_main = str_trim(sector_main))
}


# Expand 'sector_main' column
base_emp_expanded <- expand_sectors(base_emp, "sector_main")

# Function to compute top 5 based on salary
top_5_by_variable_combined_salary <- function(data, variable, label) {
  data %>%
    group_by(across(all_of(variable))) %>%
    summarise(`Salaire moyen` = mean(avg_wage, na.rm = TRUE), .groups = "drop") %>%
    arrange(desc(`Salaire moyen`)) %>%
    slice_head(n = 5) %>%
    mutate(Variable = label) %>%
    rename(Valeur = !!sym(variable)) %>%
    mutate(Valeur = as.character(Valeur))
}

# Generate top 5 summaries for salary
top_firm_salary <- top_5_by_variable_combined_salary(base_emp, "firm_name", "Firm Name")
top_sector_salary <- top_5_by_variable_combined_salary(base_emp_expanded, "sector_main", "Sector Main")
top_dept_salary <- top_5_by_variable_combined_salary(base_emp, "addr_dept_main", "Department")

# Combine all salary summaries
summary_combined_salary <- bind_rows(
  top_firm_salary %>% mutate(Section = "Entreprise"),
  top_sector_salary %>% mutate(Section = "Secteur principal"),
  top_dept_salary %>% mutate(Section = "Département")
)

# Prepare the combined summary table
summary_combined_salary <- summary_combined_salary %>%
  select(Section, Valeur, `Salaire moyen`) %>%
  arrange(Section)

# Create the styled HTML table
kable(summary_combined_salary %>% select(-Section),
      format = "html",
      col.names = c("", "Salaire moyen")) %>%
  kable_styling(
    full_width = TRUE,
    position = "center",
    bootstrap_options = c("striped", "hover", "condensed", "responsive", "bordered")
  ) %>%
  column_spec(1, background = "#d4e1e1", color = "#406f71", bold = TRUE) %>%
  row_spec(0, background = "#406f71", color = "white", bold = TRUE) %>%
  pack_rows("Département", 
            start_row = 1, 
            end_row = nrow(top_firm_salary), 
            background = "#406f71", 
            color = "white", 
            bold = TRUE) %>%
  pack_rows("Entreprise", 
            start_row = nrow(top_firm_salary) + 1, 
            end_row = nrow(top_firm_salary) + nrow(top_sector_salary), 
            background = "#406f71", 
            color = "white", 
            bold = TRUE) %>%
  pack_rows("Secteur principal", 
            start_row = nrow(top_firm_salary) + nrow(top_sector_salary) + 1, 
            end_row = nrow(summary_combined_salary), 
            background = "#406f71", 
            color = "white", 
            bold = TRUE)
```
</div> 